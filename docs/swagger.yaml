definitions:
  auth.AuthResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  auth.LoginForm:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.Role:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      firstName:
        type: string
      gender:
        type: integer
      id:
        type: integer
      lastName:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
      role:
        $ref: '#/definitions/models.Role'
      roleID:
        type: integer
      salt:
        type: string
      username:
        type: string
    type: object
  user.UserForm:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
      username:
        type: string
    required:
    - email
    - firstName
    - password
    - username
    type: object
info:
  contact:
    email: f.anaturdasa@gmail.com
    name: Fadlun Anaturdasa
    url: https://qaiserlab.github.io
paths:
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login as user
      parameters:
      - description: Form Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/auth.LoginForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.AuthResponse'
      summary: Login
      tags:
      - auth
  /v1/auth/refresh/{token}:
    get:
      consumes:
      - application/json
      description: Refresh authorization token
      parameters:
      - description: Refresh Token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.AuthResponse'
      summary: Refresh
      tags:
      - auth
  /v1/users:
    get:
      consumes:
      - application/json
      description: Get list of users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: List user
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create new user
      parameters:
      - description: Form Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.UserForm'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Create user
      tags:
      - user
  /v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user data by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Delete user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get one user data by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update user data by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Form Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.UserForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Update user
      tags:
      - user
swagger: "2.0"
